'@Folder("1. Engine")
Option Explicit

'================================================================================================================
' --- FORECASTING ENGINE MODULE (M_Forecasting_Engine) ---
' V15.3: Addressed Rubberduck code inspection warnings.
'      - Separated declaration and instantiation of objects.
'      - Replaced unsafe IIf with a standard If block.
'      - Cleaned up error handling and unused parameters.
'
' Author:      Ayush Goyal (Refactored by Gemini)
' Date:        20-Jun-2025
' Purpose:     Main orchestrator for the forecasting process. Initializes the environment,
'              manages the high-level workflow, and finalizes the run. Delegates all
'              specific logic (data access, calculations, report building) to other modules/classes.
'================================================================================================================

'@Ignore UnusedMember
Public Sub RunForecast()
    Dim tStart As Double: tStart = Timer
    Dim wbHost As Workbook: Set wbHost = ThisWorkbook
    Dim colAffiliateNames As Collection
    
    ' --- 1. INITIALIZATION ---
    If Not InitializeEnvironment(wbHost) Then GoTo Main_Exit
    
    ' --- 2. DATA LOADING ---
    Dim DAL As M_DataAccess
    Set DAL = New M_DataAccess
    If Not DAL.LoadAllData(wbHost) Then
        M_Utilities.WriteToLog "FATAL", "RunForecast", "Aborting due to data load failure."
        GoTo Main_Exit
    End If
    
    ' --- 3. PROCESSING ---
    Set colAffiliateNames = DAL.GetUniqueAffiliates
    
    If colAffiliateNames.Count = 0 Then
        M_Utilities.WriteToLog "Warning", "RunForecast", "No affiliates found in source data. Nothing to process."
        GoTo Main_Exit
    End If
    
    Dim varAffiliateName As Variant
    For Each varAffiliateName In colAffiliateNames
        Dim strAffiliateName As String: strAffiliateName = CStr(varAffiliateName)
        Application.StatusBar = "Processing Affiliate: " & strAffiliateName & "..."
        M_Utilities.WriteToLog "Info", "RunForecast", "Starting processing for affiliate: " & strAffiliateName
        
        On Error GoTo Affiliate_ErrorHandler
        
        ' A) Create and initialize the affiliate object
        Dim oAffiliate As cAffiliate
        Set oAffiliate = New cAffiliate
        oAffiliate.Initialize strAffiliateName, DAL
        
        ' B) Perform all calculations
        Dim colTierOutputData As Collection
        Set colTierOutputData = oAffiliate.ProcessForecast(DAL)
        
        ' C) Generate the report file
        Dim ReportGen As M_ReportGenerator
        Set ReportGen = New M_ReportGenerator
        ReportGen.GenerateFinalReport wbHost, strAffiliateName, colTierOutputData
        
        ' D) Clean up temporary sheets for this affiliate
        ReportGen.CleanupTemporarySheets wbHost, strAffiliateName
        
        GoTo Next_Affiliate
Affiliate_ErrorHandler:
        M_Utilities.IncrementWarningCount
        M_Utilities.WriteToLog "Error", "RunForecast", "A critical error occurred while processing affiliate '" & strAffiliateName & "'. Error: " & Err.Description
        ' Resume execution with the next affiliate
        Resume Next_Affiliate
Next_Affiliate:
        Set oAffiliate = Nothing
        On Error GoTo 0
    Next varAffiliateName

Main_Exit:
    ' --- 4. FINALIZATION ---
    Dim lngAffiliateCount As Long
    If Not colAffiliateNames Is Nothing Then
        lngAffiliateCount = colAffiliateNames.Count
    Else
        lngAffiliateCount = 0
    End If
    FinalizeRun tStart, lngAffiliateCount
End Sub

'================================================================================================================
' PRIVATE WORKFLOW STAGES
'================================================================================================================

Private Function InitializeEnvironment(ByVal wb As Workbook) As Boolean
    Dim tCheckpoint As Double: tCheckpoint = Timer
    
    ' Use 'On Error GoTo' for specific error handling sections.
    On Error GoTo Init_ErrorHandler
    
    If wb.ReadOnly Then
        MsgBox "This workbook is in Read-Only mode. Please save a copy or enable editing to run the forecast.", vbCritical, "Process Halted"
        Exit Function
    End If
    
    Application.ScreenUpdating = False
    Application.DisplayAlerts = False
    Application.Calculation = xlCalculationManual
    Application.EnableEvents = False
    Application.StatusBar = "Initializing environment..."
    
    M_Utilities.InitializeLogSheet wb
    
    tCheckpoint = M_Utilities.LogPerformance(tCheckpoint, "Initialize Environment")
    InitializeEnvironment = True
    Exit Function

Init_ErrorHandler:
    MsgBox "A critical error occurred during initialization: " & Err.Description, vbCritical, "Initialization Failed"
    InitializeEnvironment = False
End Function

Private Sub FinalizeRun(ByVal tStart As Double, ByVal lngAffiliateCount As Long)
    ' This sub runs regardless of success or failure to clean up the environment.
    On Error Resume Next ' Ensure cleanup completes
    
    Application.StatusBar = False
    Application.Calculation = xlCalculationAutomatic
    Application.ScreenUpdating = True
    Application.DisplayAlerts = True
    Application.EnableEvents = True
    Application.EnableCancelKey = xlInterrupt
    
    Dim strMessage As String
    strMessage = "Forecast process completed in " & Format$(Timer - tStart, "#,##0.00") & " seconds." & vbCrLf & vbCrLf
    strMessage = strMessage & "Affiliates Processed: " & lngAffiliateCount & vbCrLf
    strMessage = strMessage & "Warnings: " & M_Utilities.GetWarningCount & " (see Log sheet for details)"
    
    Dim msgIcon As VbMsgBoxStyle
    If M_Utilities.GetWarningCount > 0 Then
        msgIcon = vbExclamation
    Else
        msgIcon = vbInformation
    End If
    
    MsgBox strMessage, msgIcon, "Forecast Update Complete"
    
    On Error GoTo 0 ' Restore normal error handling
End Sub
